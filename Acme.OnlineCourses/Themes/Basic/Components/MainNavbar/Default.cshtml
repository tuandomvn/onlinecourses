@* ﻿@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Brand *@
@using System.Globalization
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Menu
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Toolbar

@*<nav class="navbar navbar-expand-md navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4" id="main-navbar" style="min-height: 4rem;">
    <div class="container">
        @(await Component.InvokeAsync<MainNavbarBrandViewComponent>())
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#main-navbar-collapse" aria-controls="main-navbar-collapse"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="main-navbar-collapse">
            <ul class="navbar-nav mx-auto">
                @(await Component.InvokeAsync<MainNavbarMenuViewComponent>())
            </ul>
            <ul class="navbar-nav">
                @(await Component.InvokeAsync<MainNavbarToolbarViewComponent>())
            </ul>
        </div>
    </div>
</nav>*@
@{
    var currentCulture = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
    var isVietnamese = currentCulture == "vi";
    var langFlag = isVietnamese ? "https://www.flaticon.com/free-icons/vietnam" : "🇬🇧";
    var langText = isVietnamese ? "VN" : "EN";
}
<nav class="custom-navbar">
    <div class="custom-navbar-top">
        <a href="/" class="custom-navbar-brand" style="text-decoration: none;">
            <img src="/images/logo/logo.png" alt="Logo" class="brand-logo" />
           @*  <div>
                <span class="brand-title">TESOL Channel</span>
                <div class="brand-subtitle">Nhà phân phối chính thức của LTi Australia</div>
            </div> *@
        </a>
    </div>
    <div class="custom-navbar-bottom">
        <ul class="custom-navbar-menu" style="justify-content: center; flex: 1;">
            @(await Component.InvokeAsync<MainNavbarMenuViewComponent>())
        </ul>
     @*    <ul class="navbar-nav">
            @(await Component.InvokeAsync<MainNavbarToolbarViewComponent>())
        </ul> *@
        <div class="custom-navbar-lang">
            <button class="lang-btn" type="button" onclick="toggleLangDropdown(event)">
                @if (isVietnamese)
                {
                    <img src="https://cdn-icons-png.flaticon.com/512/197/197473.png" alt="Vietnam Flag" class="lang-flag" 
                    style="width: 1.1em; height: 1.1em; margin-right: 0.3rem;" />
                }
                else
                {
                    <img src="https://cdn-icons-png.flaticon.com/512/197/197374.png" alt="UK Flag" 
                    class="lang-flag" style="width: 1.1em; height: 1.1em; margin-right: 0.3rem;" />
                }
                <span class="lang-text">@langText</span>
                <span class="lang-caret">▼</span>
            </button>
            <div class="lang-dropdown" id="langDropdown" style="display: none;">
                <a href="/Abp/Languages/Switch?culture=vi&uiCulture=vi" class="lang-option">
                    <span class="lang-flag">
                        <img src="https://cdn-icons-png.flaticon.com/512/197/197473.png" alt="Vietnam Flag" class="lang-flag"
                             style="width: 1.1em; height: 1.1em; margin-right: 0.3rem;" />
                    </span> VN
                </a>
                <a href="/Abp/Languages/Switch?culture=en&uiCulture=en" class="lang-option">
                    <span class="lang-flag">
                        <img src="https://cdn-icons-png.flaticon.com/512/197/197374.png" alt="UK Flag"
                             class="lang-flag" style="width: 1.1em; height: 1.1em; margin-right: 0.3rem;" />
                    </span> EN
                </a>
            </div>
            <script>
                function toggleLangDropdown(event) {
                    event.stopPropagation();
                    var dropdown = document.getElementById('langDropdown');
                    dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
                }
                document.addEventListener('click', function (e) {
                    var dropdown = document.getElementById('langDropdown');
                    if (dropdown && dropdown.style.display === 'block') {
                        dropdown.style.display = 'none';
                    }
                });
                document.getElementById('langDropdown').addEventListener('click', function (e) {
                    e.stopPropagation();
                });
            </script>
        </div>
    </div>
</nav>


<style>
    /* Active menu item styling */
    .custom-navbar-menu a.active {
        color: white; 
        font-weight: bold;
        position: relative;
        color: #48C8D4;
    }

        .custom-navbar-menu a.active::after {
            display: none; 
        }

    .custom-navbar-menu a:hover:not(.active) {
        transition: all 0.3s ease;
    }

    .custom-navbar-menu a {
        padding: 6px 12px;
        margin: 0 3px;
        border-radius: 4px;
        transition: all 0.3s ease;
        text-decoration: none;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Set active class based on current URL
        setActiveMenuItem();
        
        // Add click event listeners to menu items
        var menuItems = document.querySelectorAll('.custom-navbar-menu a');
        menuItems.forEach(function(item) {
            item.addEventListener('click', function() {
                // Remove active class from all items
                menuItems.forEach(function(menuItem) {
                    menuItem.classList.remove('active');
                });
                
                // Add active class to clicked item
                this.classList.add('active');
                
                // Store active menu item path in localStorage
                localStorage.setItem('activeMenuPath', this.getAttribute('href'));
            });
        });
    });
    
    function setActiveMenuItem() {
        var currentPath = window.location.pathname;
        var menuItems = document.querySelectorAll('.custom-navbar-menu a');
        
        // First try to match exact path
        var activeFound = false;
        menuItems.forEach(function(item) {
            var href = item.getAttribute('href');
            if (href === currentPath) {
                item.classList.add('active');
                activeFound = true;
            }
        });
        
        // If no exact match, try to match the beginning of the path
        if (!activeFound) {
            menuItems.forEach(function(item) {
                var href = item.getAttribute('href');
                if (href !== '/' && currentPath.startsWith(href) && href.length > 1) {
                    item.classList.add('active');
                    activeFound = true;
                }
            });
        }
        
        // If still no match and we have a stored active item, use that
        if (!activeFound) {
            var storedPath = localStorage.getItem('activeMenuPath');
            if (storedPath) {
                menuItems.forEach(function(item) {
                    if (item.getAttribute('href') === storedPath) {
                        item.classList.add('active');
                    }
                });
            } else if (currentPath === '/') {
                // If we're on the home page and no stored path, set home link as active
                var homeLink = document.querySelector('.custom-navbar-menu a[href="/"]');
                if (homeLink) {
                    homeLink.classList.add('active');
                }
            }
        }
    }
</script>
