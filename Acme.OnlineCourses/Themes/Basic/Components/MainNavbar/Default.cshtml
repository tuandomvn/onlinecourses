@using System.Globalization
@using Acme.OnlineCourses.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Menu
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.Toolbar
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@inject IStringLocalizer<OnlineCoursesResource> L

@{
    var currentCulture = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
    var isVietnamese = currentCulture == "vi";
    var langFlag = isVietnamese ? "https://www.flaticon.com/free-icons/vietnam" : "🇬🇧";
    var langText = isVietnamese ? "VN" : "EN";
}
<nav class="custom-navbar">
    <div class="custom-navbar-top">
        <a href="/" class="custom-navbar-brand" style="text-decoration: none;">
            <img src="/images/logo/logo.png" alt="Logo" class="brand-logo" />
        </a>
    </div>
    <div class="custom-navbar-bottom">
        <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Toggle menu">
            <span></span>
            <span></span>
            <span></span>
        </button>

        <ul class="custom-navbar-menu" id="mobileMenu" style="justify-content: center; flex: 1;">
            @(await Component.InvokeAsync<MainNavbarMenuViewComponent>())
            <button class="menu-close" id="mobileMenuClose">×</button>
        </ul>

        <div class="menu-overlay" id="menuOverlay"></div>

        <div class="navbar-right-section">
            @if (CurrentUser.IsAuthenticated)
            {
                <div class="user-greeting-container">
                    <button class="greeting-text" type="button" id="userDropdownToggle">
                        <i class="fas fa-user-circle greeting-icon"></i>
                        @L["Hello"], @(CurrentUser.Name ?? CurrentUser.UserName ?? "User")
                        <i class="fas fa-chevron-down user-caret"></i>
                    </button>
                    <div class="user-dropdown" id="userDropdown">
                        <div class="user-dropdown-header">
                            <div class="user-avatar">
                                <i class="fas fa-user-circle"></i>
                            </div>
                            <div class="user-info">
                                <div class="user-name">@(CurrentUser.Name ?? CurrentUser.UserName ?? "User")</div>
                                <div class="user-email">@(CurrentUser.Email ?? "")</div>
                            </div>
                        </div>
                        <div class="user-dropdown-divider"></div>
                        <div class="user-dropdown-content">
                            @if (CurrentUser.IsInRole("Student"))
                            {
                                <a href="/Students/Profile" class="user-dropdown-item">
                                    <i class="fas fa-user"></i>
                                    <span>@L["Menu:Students:Profile"]</span>
                                </a>
                            }
                            <a href="/Account/ChangePassword" class="user-dropdown-item logout-item">
                                <i class="fas fa-key"></i>
                                <span>@L["ChangePassword"]</span>
                            </a>
                            <a href="/Account/Logout" class="user-dropdown-item logout-item">
                                <i class="fas fa-sign-out-alt"></i>
                                <span>@L["Menu:Logout"]</span>
                            </a>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="user-greeting-container">
                     <button class="greeting-text" type="button" id="userDropdownToggle">
                             <a href="/Account/Login">@L["Menu:Login"]</a>
                    </button>
              
                </div>
            }

            <div class="custom-navbar-lang">
                <button class="lang-btn lang-btn-mobile" type="button" id="langDropdownToggle">
                    <div class="lang-circle">
                        <span class="lang-text-mobile">@langText</span>
                    </div>
                    <span class="lang-caret d-none d-md-inline">▼</span>
                </button>
                <div class="lang-dropdown" id="langDropdown" style="display: none;">
                    <a href="javascript:void(0)" onclick="switchLanguage('vi')" class="lang-option">
                        <span class="lang-flag">
                            <img src="https://cdn-icons-png.flaticon.com/512/197/197473.png" alt="Vietnam Flag" class="lang-flag"
                                 style="width: 1.1em; height: 1.1em; margin-right: 0.3rem;" />
                        </span> VN
                    </a>
                    <a href="javascript:void(0)" onclick="switchLanguage('en')" class="lang-option">
                        <span class="lang-flag">
                            <img src="https://cdn-icons-png.flaticon.com/512/197/197374.png" alt="UK Flag"
                                 class="lang-flag" style="width: 1.1em; height: 1.1em; margin-right: 0.3rem;" />
                        </span> EN
                    </a>
                </div>
            </div>
        </div>
    </div>
</nav>

<div class="sticky-spacer" id="navbar-spacer"></div>

<style>
    /* User greeting and dropdown styles */
    .navbar-right-section {
        display: flex;
        align-items: center;
    }

    .user-greeting-container {
        position: relative;
        display: flex;
        align-items: center;
    }

    .greeting-text {
        color: white;
        font-size: 0.9rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 8px 12px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        cursor: pointer;
    }
    .greeting-text a{
            color: white;
            text-decoration: none;
        }
        .greeting-text:hover {
            background: rgba(255, 255, 255, 0.15);
            transform: translateY(-1px);
            color: white;
        }

    .greeting-icon {
        font-size: 1.1rem;
        color: #48C8D4;
    }

    .user-caret {
        font-size: 0.7rem;
        transition: transform 0.3s ease;
        margin-left: 4px;
    }

    .greeting-text.active .user-caret {
        transform: rotate(180deg);
    }

    /* User Dropdown Styles */
    .user-dropdown {
        position: absolute;
        top: calc(100% + 8px);
        right: 0;
        min-width: 280px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
        border: 1px solid rgba(0, 0, 0, 0.1);
        overflow: hidden;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        display: block !important;
    }

        .user-dropdown.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

    .user-dropdown-header {
        padding: 20px;
        background: linear-gradient(135deg, #003366 0%, #004080 100%);
        color: white;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .user-avatar {
        font-size: 2.5rem;
        color: #48C8D4;
    }

    .user-info {
        flex: 1;
    }

    .user-name {
        font-weight: 600;
        font-size: 1rem;
        margin-bottom: 4px;
    }

    .user-email {
        font-size: 0.85rem;
        opacity: 0.8;
        word-break: break-all;
    }

    .user-dropdown-divider {
        height: 1px;
        background: #eee;
    }

    .user-dropdown-content {
        padding: 8px 0;
    }

    .user-dropdown-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px 20px;
        color: #333;
        text-decoration: none;
        transition: all 0.2s ease;
        font-size: 0.9rem;
    }

        .user-dropdown-item:hover {
            background: #f8f9fa;
            color: #003366;
            text-decoration: none;
        }

        .user-dropdown-item i {
            width: 16px;
            text-align: center;
            color: #666;
        }

    .logout-item:hover {
        background: #fff2f2;
        color: #dc3545;
    }

        .logout-item:hover i {
            color: #dc3545;
        }

    /* Active menu item styling */
    .custom-navbar-menu a.active {
        color: white;
        font-weight: bold;
        position: relative;
        color: #48C8D4;
    }

        .custom-navbar-menu a.active::after {
            display: none;
        }

    .custom-navbar-menu a:hover:not(.active) {
        transition: all 0.3s ease;
    }

    .custom-navbar-menu a {
        padding: 6px 12px;
        margin: 0 3px;
        border-radius: 4px;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    /* Sticky navbar styles */
    .custom-navbar {
        width: 100%;
        z-index: 1000;
    }

    .custom-navbar-bottom {
        transition: all 0.3s ease;
        width: 100%;
    }

    #mobileMenuClose {
        visibility: hidden;
    }

    .sticky {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        animation: slideDown 0.3s forwards;
        z-index: 1000;
    }

    /* Animation for sticky navbar */
    @@keyframes slideDown {
        from {
            transform: translateY(-100%);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    /* Create space when navbar becomes sticky */
    .sticky-spacer {
        display: none;
        width: 100%;
    }

        .sticky-spacer.active {
            display: block;
        }
    /* Mobile navbar styles */
    .custom-navbar-bottom {
        background-color: #003366;
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 15px;
    }

    .mobile-menu-toggle {
        display: none;
        background: none;
        border: none;
        cursor: pointer;
        padding: 5px;
        z-index: 100;
    }

        .mobile-menu-toggle span {
            display: block;
            width: 25px;
            height: 3px;
            background-color: white;
            margin: 5px 0;
            transition: all 0.3s ease;
        }

    .mobile-brand {
        display: none;
    }

    .lang-btn-mobile {
        background: none;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
    }

    .lang-circle {
        background-color: #e4181b;
        color: white;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .lang-text-mobile {
        font-weight: bold;
        font-size: 0.9rem;
    }

    /* Responsive styles */
    @@media (max-width: 768px) {
        #mobileMenuClose {
            visibility: visible;
        }

        .mobile-menu-toggle {
            display: block;
        }

        .mobile-brand {
            display: flex;
            flex-direction: column;
        }

        .mobile-title {
            font-weight: bold;
            font-size: 1rem;
        }

        .mobile-subtitle {
            font-size: 0.7rem;
        }
        /* Mobile user greeting */
        .navbar-right-section {
/*             gap: 10px; */
        }

        .user-greeting-container {
            order: -1; /* Move greeting before language on mobile */
        }

        .greeting-text {
            font-size: 0.8rem;
            padding: 6px 10px;
            border-radius: 15px;
            gap: 6px;
        }

        .greeting-icon {
            font-size: 1rem;
        }

        .user-caret {
            font-size: 0.6rem;
        }
        /* Mobile user dropdown */
        .user-dropdown {
            min-width: 260px;
            right: -20px;
        }

        .user-dropdown-header {
            padding: 16px;
        }

        .user-avatar {
            font-size: 2rem;
        }

        .user-name {
            font-size: 0.9rem;
        }

        .user-email {
            font-size: 0.8rem;
        }
        /* Hide greeting text on very small screens, show only icon */
        @@media (max-width: 480px) {
            .greeting-text {
                padding: 6px 8px;
                gap: 4px;
            }

                .greeting-text span:not(.greeting-icon):not(.user-caret) {
                    display: none;
                }

            .greeting-icon {
                font-size: 1.2rem;
            }

            .user-dropdown {
                min-width: 240px;
                right: -40px;
            }
        }

        .custom-navbar-menu {
            display: none;
            position: fixed;
            top: 52px;
            left: 0;
            width: 80%;
            max-width: 330px;
            height: 100vh;
            background-color: #f0f6ff;
            z-index: 1100;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
            overflow-y: auto;
            padding: 0;
        }

            .custom-navbar-menu.show {
                display: block;
                transform: translateX(0);
            }

        @@keyframes slideIn {
            from {
                transform: translateX(-100%);
            }

            to {
                transform: translateX(0);
            }
        }
        /* Close button */
        .custom-navbar-menu.show .menu-close {
            position: absolute;
            top: 2px;
            right: 2px;
            font-size: 24px;
            cursor: pointer;
            color: #666;
            z-index: 1200;
            background: none;
            border: none;
        }
        /* Menu items styling */
        .custom-navbar-menu.show a {
            display: block;
            padding: 15px 20px;
            color: #333;
            font-weight: 500;
            border-bottom: 1px solid #e0e0e0;
            margin: 0;
            text-align: left;
        }

            .custom-navbar-menu.show a.active {
                color: #003366;
                font-weight: 600;
                background-color: rgba(0, 51, 102, 0.05);
            }
        /* Overlay for the rest of the screen */
        .menu-overlay {
            display: none;
            position: fixed;
            top: 52px;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #011939CC;
            z-index: 1090;
        }

            .menu-overlay.show {
                display: block;
            }
    }

    /* Extra small screens - stack greeting and language vertically */
    @@media (max-width: 350px) {
        .navbar-right-section {
            flex-direction: column;
            gap: 5px;
            align-items: flex-end;
        }

        .user-greeting-container {
            order: 0;
        }

        .user-dropdown {
            right: -60px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Set active class based on current URL
        setActiveMenuItem();

        // Add click event listeners to menu items
        var menuItems = document.querySelectorAll('.custom-navbar-menu a');
        menuItems.forEach(function(item) {
            item.addEventListener('click', function() {
                // Remove active class from all items
                menuItems.forEach(function(menuItem) {
                    menuItem.classList.remove('active');
                });

                // Add active class to clicked item
                this.classList.add('active');

                // Store active menu item path in localStorage
                localStorage.setItem('activeMenuPath', this.getAttribute('href'));
            });
        });

        // Sticky navbar functionality
        var navbar = document.querySelector('.custom-navbar-bottom');
        var navbarSpacer = document.getElementById('navbar-spacer');
        var navbarOffsetTop = navbar.offsetTop;
        var navbarHeight = navbar.offsetHeight;

        // Update spacer height when window is resized
        function updateSpacerHeight() {
            navbarHeight = navbar.offsetHeight;
            navbarSpacer.style.height = navbarHeight + 'px';
        }

        // Handle scroll event to add/remove sticky class
        function handleScroll() {
            if (window.pageYOffset > navbarOffsetTop) {
                if (!navbar.classList.contains('sticky')) {
                    navbar.classList.add('sticky');
                    navbarSpacer.classList.add('active');
                    updateSpacerHeight();
                }
            } else {
                navbar.classList.remove('sticky');
                navbarSpacer.classList.remove('active');
            }
        }

        // Add event listeners
        window.addEventListener('scroll', handleScroll);
        window.addEventListener('resize', updateSpacerHeight);

        // Initialize once on page load
        updateSpacerHeight();
        handleScroll();

        // User dropdown functionality
        var userDropdownToggle = document.getElementById('userDropdownToggle');
        var userDropdown = document.getElementById('userDropdown');

        if (userDropdownToggle && userDropdown) {
            userDropdownToggle.addEventListener('click', function(event) {
                event.stopPropagation();

                // Close language dropdown if open
                var langDropdown = document.getElementById('langDropdown');
                if (langDropdown && langDropdown.style.display === 'block') {
                    langDropdown.style.display = 'none';
                }

                // Toggle user dropdown
                if (userDropdown.classList.contains('show')) {
                    userDropdown.classList.remove('show');
                    userDropdownToggle.classList.remove('active');
                } else {
                    userDropdown.classList.add('show');
                    userDropdownToggle.classList.add('active');
                }
            });

            // Prevent dropdown closing when clicking inside
            userDropdown.addEventListener('click', function (e) {
                e.stopPropagation();
            });
        }

        // Language dropdown functionality
        var langDropdownToggle = document.getElementById('langDropdownToggle');
        var langDropdown = document.getElementById('langDropdown');

        if (langDropdownToggle && langDropdown) {
            langDropdownToggle.addEventListener('click', function(event) {
                event.stopPropagation();

                // Close user dropdown if open
                if (userDropdown && userDropdown.classList.contains('show')) {
                    userDropdown.classList.remove('show');
                    if (userDropdownToggle) userDropdownToggle.classList.remove('active');
                }

                // Toggle language dropdown
                langDropdown.style.display = langDropdown.style.display === 'block' ? 'none' : 'block';
            });

            // Prevent dropdown closing when clicking inside
            langDropdown.addEventListener('click', function (e) {
                e.stopPropagation();
            });
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function (e) {
            // Close user dropdown
            if (userDropdown && userDropdown.classList.contains('show')) {
                userDropdown.classList.remove('show');
                if (userDropdownToggle) userDropdownToggle.classList.remove('active');
            }

            // Close language dropdown
            if (langDropdown && langDropdown.style.display === 'block') {
                langDropdown.style.display = 'none';
            }
        });

        // Mobile menu functionality
        const mobileMenuToggle = document.getElementById('mobileMenuToggle');
        const mobileMenu = document.getElementById('mobileMenu');
        const mobileMenuClose = document.getElementById('mobileMenuClose');
        const menuOverlay = document.getElementById('menuOverlay');

        function openMobileMenu() {
            mobileMenu.classList.add('show');
            menuOverlay.classList.add('show');
            document.body.style.overflow = 'hidden'; // Prevent scrolling
        }

        function closeMobileMenu() {
            mobileMenu.classList.remove('show');
            menuOverlay.classList.remove('show');
            document.body.style.overflow = ''; // Enable scrolling
        }

        // Event listeners for mobile menu
        if (mobileMenuToggle) {
            mobileMenuToggle.addEventListener('click', openMobileMenu);
        }

        if (mobileMenuClose) {
            mobileMenuClose.addEventListener('click', closeMobileMenu);
        }

        if (menuOverlay) {
            menuOverlay.addEventListener('click', closeMobileMenu);
        }

        // Close menu when clicking menu items
        menuItems.forEach(function(item) {
            item.addEventListener('click', function() {
                closeMobileMenu();
            });
        });
    });

    function setActiveMenuItem() {
        var currentPath = window.location.pathname;
        var menuItems = document.querySelectorAll('.custom-navbar-menu a');
        
        // Clear all active classes first
        menuItems.forEach(function(item) {
            item.classList.remove('active');
        });
        
        // If on login page, don't set any menu item as active
        if (currentPath === '/Account/Login') {
            return;
        }

        // First try to match exact path
        var activeFound = false;
        menuItems.forEach(function(item) {
            var href = item.getAttribute('href');
            if (href === currentPath) {
                item.classList.add('active');
                activeFound = true;
            }
        });

        // If no exact match, try to match the beginning of the path
        if (!activeFound) {
            menuItems.forEach(function(item) {
                var href = item.getAttribute('href');
                if (href !== '/' && currentPath.startsWith(href) && href.length > 1) {
                    item.classList.add('active');
                    activeFound = true;
                }
            });
        }

        // If still no match and we have a stored active item, use that
        if (!activeFound) {
            var storedPath = localStorage.getItem('activeMenuPath');
            if (storedPath) {
                menuItems.forEach(function(item) {
                    if (item.getAttribute('href') === storedPath) {
                        item.classList.add('active');
                    }
                });
            } else if (currentPath === '/') {
                // If we're on the home page and no stored path, set home link as active
                var homeLink = document.querySelector('.custom-navbar-menu a[href="/"]');
                if (homeLink) {
                    homeLink.classList.add('active');
                }
            }
        }
    }

    function switchLanguage(language) {
        // Set the cookie immediately
        document.cookie = "Abp.Localization.CultureName=" + language + ";path=/;max-age=" + (365 * 24 * 60 * 60);
        
        // Use the ABP language switch endpoint
        const url = `/Abp/Languages/Switch?culture=${language}&uiCulture=${language}`;
        
        // Use only the path portion of the URL for the return URL
        const currentPath = window.location.pathname + window.location.search + window.location.hash;
        
        const redirectUrl = `${url}&returnUrl=${encodeURIComponent(currentPath)}`;
        window.location.href = redirectUrl;
    }
</script>