@page
@using Acme.OnlineCourses.Pages.Reports
@model IndexModel
@using Microsoft.AspNetCore.Mvc.Localization
@using Acme.OnlineCourses.Localization
@using Acme.OnlineCourses.Reports
@inject IHtmlLocalizer<OnlineCoursesResource> L
@{
    ViewData["Title"] = L["Reports"];
}

@section scripts {
    <script>
        function handleReportTypeChange(value) {
            debugger;
            console.log('handleReportTypeChange called with value:', value, 'type:', typeof value);
            var agencySelect = document.getElementById('agencySelectContainer');
            console.log('agencySelect element:', agencySelect);
            
            // AgencyReport has value 3
            if (value == 3 || value === '3' || value == 'AgencyReport') {
                agencySelect.style.display = 'block';
                console.log('Showing agency select');
            } else {
                agencySelect.style.display = 'none';
                console.log('Hiding agency select');
            }
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded');
            var reportTypeSelect = document.getElementById('ReportType');
            console.log('ReportType select found:', reportTypeSelect);
            console.log('Initial value:', reportTypeSelect.value);
            
            handleReportTypeChange(reportTypeSelect.value);
            
            reportTypeSelect.addEventListener('change', function() {
                console.log('ReportType changed to:', this.value);
                handleReportTypeChange(this.value);
            });
        });
    </script>
}

<abp-card>
    <abp-card-header>
        <abp-row>
            <abp-column size-md="_6">
                <abp-card-title>@L["Reports"]</abp-card-title>
            </abp-column>
        </abp-row>
    </abp-card-header>
    <abp-card-body>
        <form method="post" asp-page-handler="GenerateReport">
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="ReportType">@L["ReportType"]</label>
                    <select id="ReportType" name="SelectedReportType" class="form-control" onchange="handleReportTypeChange(this.value)">
                        <option value="@ReportType.StudentReport" selected="@(Model.SelectedReportType == ReportType.StudentReport)">@L["StudentReport"]</option>
                        <option value="@ReportType.CourseReport" selected="@(Model.SelectedReportType == ReportType.CourseReport)">@L["CourseReport"]</option>
                        <option value="@ReportType.AgencyReport" selected="@(Model.SelectedReportType == ReportType.AgencyReport)">@L["AgencyReport"]</option>
                    </select>
                </div>
                <div class="col-md-3 agency-select" id="agencySelectContainer">
                    <label for="AgencyId">@L["Agency"]</label>
                    <select id="AgencyId" name="SelectedAgencyId" class="form-control">
                        <option value="-1">@L["AllAgencies"]</option>
                        @foreach (var agency in Model.Agencies)
                        {
                            <option value="@agency.Id" selected="@(agency.Id == Model.SelectedAgencyId)">@agency.Name</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="Year">@L["Year"]</label>
                    <select id="Year" name="SelectedYear" class="form-control">
                        @for (int year = DateTime.Now.Year; year >= DateTime.Now.Year - 5; year--)
                        {
                            <option value="@year" selected="@(year == Model.SelectedYear)">@year</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="Month">@L["Month"]</label>
                    <select id="Month" name="SelectedMonth" class="form-control">
                        <option value="-1" selected="@(Model.SelectedMonth == -1)">--All--</option>
                        @for (int month = 1; month <= 12; month++)
                        {
                            <option value="@month" selected="@(month == Model.SelectedMonth)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-file-excel"></i> @L["GenerateReport"]
                    </button>
                </div>
            </div>
        </form>

        @if (!string.IsNullOrEmpty(Model.ReportContent))
        {
            <div class="report-container mt-4">
                @Html.Raw(Model.ReportContent)
            </div>
        }
    </abp-card-body>
</abp-card> 