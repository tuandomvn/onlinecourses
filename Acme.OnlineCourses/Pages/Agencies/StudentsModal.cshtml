@page
@using Microsoft.Extensions.Localization
@using Acme.OnlineCourses.Localization
@using Acme.OnlineCourses.Pages.Agencies
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Button
@model StudentsModalModel
@inject IStringLocalizer<OnlineCoursesResource> L
@{
    Layout = null;
}

<abp-modal size="ExtraLarge">
    <abp-modal-header title="@L["AgencyStudents"]"></abp-modal-header>
    <abp-modal-body>
        <form id="StudentsForm" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" id="AgencyId" value="@Model.AgencyId" />
            <abp-table striped-rows="true" id="AgencyStudentsTable" class="table-responsive">
                <thead>
                    <tr>
                        <th>@L["FullName"]</th>
                        <th>@L["Email"]</th>
                        <th>@L["PhoneNumber"]</th>
                        <th>@L["CourseName"]</th>
                        <th>@L["RegistrationDate"]</th>
                        <th>@L["TestStatus"]</th>
                        <th>@L["PaymentStatus"]</th>
                        <th>@L["AccountStatus"]</th>
                    </tr>
                </thead>
            </abp-table>
        </form>
    </abp-modal-body>
    <abp-modal-footer buttons="@(AbpModalButtons.Close)"></abp-modal-footer>
</abp-modal>

@section scripts {
    <script>
        $(function () {
            console.log(" dataTable gencyStudentsTable)DataTable(")
            var l = abp.localization.getResource('OnlineCourses');
            var dataTable;

            function initializeDataTable() {
                dataTable = $('#AgencyStudentsTable').DataTable(
                    abp.libs.datatables.normalizeConfiguration({
                        serverSide: true,
                        paging: true,
                        order: [[1, "asc"]],
                        searching: false,
                        processing: true,
                        ajax: {
                            url: abp.appPath + 'Agencies/StudentsModal?handler=GetStudents',
                            type: 'GET',
                            data: function (input) {
                                var data = {
                                    agencyId: '@Model.AgencyId',
                                    skipCount: input.start,
                                    maxResultCount: input.length,
                                    sorting: input.order[0].column + ' ' + input.order[0].dir
                                };
                                return data;
                            },
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader('RequestVerificationToken', abp.security.antiForgery.getToken());
                            }
                        },
                        columnDefs: [
                            {
                                title: l('FullName'),
                                data: "fullName"
                            },
                            {
                                title: l('Email'),
                                data: "email"
                            },
                            {
                                title: l('PhoneNumber'),
                                data: "phoneNumber"
                            },
                            {
                                title: l('CourseName'),
                                data: "courseName"
                            },
                            {
                                title: l('RegistrationDate'),
                                data: "registrationDate",
                                render: function (data) {
                                    return moment(data).format('DD/MM/YYYY');
                                }
                            },
                            {
                                title: l('TestStatus'),
                                data: "testStatus",
                                render: function (data) {
                                    return l('Enum:TestStatus:' + data);
                                }
                            },
                            {
                                title: l('PaymentStatus'),
                                data: "paymentStatus",
                                render: function (data) {
                                    return l('Enum:PaymentStatus:' + data);
                                }
                            },
                            {
                                title: l('AccountStatus'),
                                data: "accountStatus",
                                render: function (data) {
                                    return l('Enum:AccountStatus:' + data);
                                }
                            }
                        ]
                    })
                );
            }

            initializeDataTable();
        });
    </script>
} 